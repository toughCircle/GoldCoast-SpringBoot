name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK for auth-server
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build auth-server
        run: |
          cd auth-server
          chmod +x ./gradlew
          ./gradlew build

      - name: Upload auth-server artifact
        uses: actions/upload-artifact@v3
        with:
          name: auth-server-app
          path: auth-server/build/libs/*.jar

      - name: Set up JDK for resource-server
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build resource-server
        run: |
          cd resource-server
          chmod +x ./gradlew
          ./gradlew build

      - name: Upload resource-server artifact
        uses: actions/upload-artifact@v3
        with:
          name: resource-server-app
          path: resource-server/build/libs/*.jar

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: auth-server-app
          path: ./deploy

      - name: Download resource-server artifact
        uses: actions/download-artifact@v3
        with:
          name: resource-server-app
          path: ./deploy

      - name: Transfer files to EC2
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            ./deploy/auth-server.jar
            ./deploy/resource-server.jar
            ./docker-compose.yml  # docker-compose.yml 파일도 포함
          target: "/home/ubuntu/app"

      - name: Install Docker Compose and Deploy on EC2
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: 'ubuntu'
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 작업 디렉토리로 이동
            cd /home/ubuntu/app

            # 기존 컨테이너 중지
            docker-compose stop

            # 새로 컨테이너 시작 및 빌드 (볼륨 유지)
            docker-compose up -d --build
          debug: true
