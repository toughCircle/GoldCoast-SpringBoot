name: Deploy to Dev Environment

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Make directory for deliverables
        run: mkdir deploy

      - name: Build auth-server
        working-directory: ./auth-server
        run: ./gradlew clean build

      - name: Copy auth-server JAR to deploy directory
        run: cp ./auth-server/build/libs/*.jar ./deploy/auth-server.jar

      - name: Build resource-server
        working-directory: ./resource-server
        run: ./gradlew clean build

      - name: Copy resource-server JAR to deploy directory
        run: cp ./resource-server/build/libs/*.jar ./deploy/resource-server.jar

      - name: Transfer Docker Compose file to EC2
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            ./deploy/auth-server.jar
            ./deploy/resource-server.jar
            ./docker-compose.yml
          target: "/home/ubuntu/app/"

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Spring Boot Docker Image for auth-server
        working-directory: ./auth-server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-server:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-server:latest

      - name: Build and Push Spring Boot Docker Image for resource-server
        working-directory: ./resource-server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/resource-server:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/resource-server:latest

      - name: Deploy Application on EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Docker Hub 로그인
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            # 필요한 이미지 pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/auth-server:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/resource-server:latest

            # Docker Compose 설정이 있는 디렉토리로 이동
            cd /home/ubuntu/app

            # 기존 컨테이너 중지
            docker-compose down
            
            # Docker Compose로 컨테이너 재시작
            docker-compose up -d --build
